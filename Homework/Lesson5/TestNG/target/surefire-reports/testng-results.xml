<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="9" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="70" started-at="2016-07-16T17:50:44Z" finished-at="2016-07-16T17:50:44Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="70" started-at="2016-07-16T17:50:44Z" finished-at="2016-07-16T17:50:44Z">
      <class name="ParamTest">
        <test-method status="PASS" signature="testCheckExpireDateId(java.lang.String, boolean)[pri:0, instance:ParamTest@511baa65]" name="testCheckExpireDateId" duration-ms="35" started-at="2016-07-16T20:50:44Z" data-provider="exampletest2" finished-at="2016-07-16T20:50:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8/7/2017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckExpireDateId -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:ParamTest@511baa65]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-16T20:50:44Z" finished-at="2016-07-16T20:50:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:ParamTest@511baa65]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-16T20:50:44Z" finished-at="2016-07-16T20:50:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testCheckExpireDateId(java.lang.String, boolean)[pri:0, instance:ParamTest@511baa65]" name="testCheckExpireDateId" duration-ms="2" started-at="2016-07-16T20:50:44Z" data-provider="exampletest2" finished-at="2016-07-16T20:50:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15/10/2015]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckExpireDateId -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:ParamTest@511baa65]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-16T20:50:44Z" finished-at="2016-07-16T20:50:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testCheckExpireDateId(java.lang.String, boolean)[pri:0, instance:ParamTest@511baa65]" name="testCheckExpireDateId" duration-ms="0" started-at="2016-07-16T20:50:44Z" data-provider="exampletest2" finished-at="2016-07-16T20:50:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10/02/2018]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckExpireDateId -->
      </class> <!-- ParamTest -->
      <class name="TestEmployeeDetails">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:TestEmployeeDetails@27f674d]" name="beforeTest" is-config="true" duration-ms="13" started-at="2016-07-16T20:50:44Z" finished-at="2016-07-16T20:50:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testCalculateAppriasal()[pri:0, instance:TestEmployeeDetails@27f674d]" name="testCalculateAppriasal" duration-ms="1" started-at="2016-07-16T20:50:44Z" finished-at="2016-07-16T20:50:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculateAppriasal -->
        <test-method status="PASS" signature="testCalculateOneHourCost()[pri:0, instance:TestEmployeeDetails@27f674d]" name="testCalculateOneHourCost" duration-ms="1" started-at="2016-07-16T20:50:44Z" finished-at="2016-07-16T20:50:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculateOneHourCost -->
        <test-method status="PASS" signature="testCalculateSalary()[pri:0, instance:TestEmployeeDetails@27f674d]" name="testCalculateSalary" duration-ms="0" started-at="2016-07-16T20:50:44Z" finished-at="2016-07-16T20:50:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculateSalary -->
        <test-method status="PASS" signature="testIsValidEmployee()[pri:0, instance:TestEmployeeDetails@27f674d]" name="testIsValidEmployee" duration-ms="0" started-at="2016-07-16T20:50:44Z" finished-at="2016-07-16T20:50:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidEmployee -->
        <test-method status="PASS" signature="testCalculateYearlySalary()[pri:0, instance:TestEmployeeDetails@27f674d]" name="testCalculateYearlySalary" duration-ms="0" started-at="2016-07-16T20:50:44Z" finished-at="2016-07-16T20:50:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculateYearlySalary -->
        <test-method status="PASS" signature="throwsNullPointerException()[pri:0, instance:TestEmployeeDetails@27f674d]" name="throwsNullPointerException" duration-ms="0" started-at="2016-07-16T20:50:44Z" finished-at="2016-07-16T20:50:44Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at TestEmployeeDetails.throwsNullPointerException(TestEmployeeDetails.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsNullPointerException -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:TestEmployeeDetails@27f674d]" name="afterTest" is-config="true" duration-ms="0" started-at="2016-07-16T20:50:44Z" finished-at="2016-07-16T20:50:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- TestEmployeeDetails -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
